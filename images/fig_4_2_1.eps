%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 175 524 453 737 
%%LanguageLevel: 2
%%Creator: CorelDRAW X6
%%Title: fig_4_2_1.eps
%%CreationDate: Sat Apr 29 11:27:41 2017
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X6 Версия 16.4.0.1280
/EpsFile true def
%%BeginResource: procset wCorel16Dict 16.0 0
/wCorel16Dict 300 dict def wCorel16Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9 dict copy begin
/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk def/ColorSpace
DocCmykSpace def/separate_color{currentdict false SeparationPlateIndex 0 ge
SeparationPlateIndex 3 le and{color SeparationPlateIndex get dup 0 gt{3 1 roll
pop pop SeparateInColor{0 0 0 4 SeparationPlateIndex roll create_cmyk_color
true}{1 exch sub create_grayscale_color true}ifelse}{pop}ifelse}if}bd
/convert_to_cmyk{currentdict}bd currentdict end def/create_cmyk_color{
CmykColorSpec 9 dict copy begin 4 array astore/color exch def/ColorSpace
DocCmykSpace def currentdict end}bd/SpotColorSpec ColorSpec 9 dict copy begin
/num 1 def/ColorModel/Spot def/set_color{ColorSeparationLevel1{color aload pop
get_cmyk_alternative_color/color get aload pop names aload pop
findcmykcustomcolor exch setcustomcolor}{ColorSpace safe_setcolorspace color
aload pop setcolor}ifelse}bd/separate_color{currentdict false
SeparationPlateIndex 4 eq{names aload pop SeparationPlateName eq{color aload
pop dup 0 gt{3 1 roll pop pop SeparateInColor{pop convert_to_cmyk true}{1 exch
sub create_grayscale_color true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{
/alternativeSpace ColorSpace 2 get def/tintTransformProc ColorSpace 3 get def
alternativeSpace DocCmykSpace eq{color aload pop tintTransformProc
create_cmyk_color}{alternativeSpace DocRgbSpace eq{color aload pop
tintTransformProc create_rgb_color/convert_to_cmyk dexec}{alternativeSpace
DocGrayScaleSpace eq{0 0 0 color aload pop 1 sub create_cmyk_color}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd/get_cmyk_alternative_color{
/alternativeSpace ColorSpace 2 get def alternativeSpace DocCmykSpace eq{
alternativeColor aload pop create_cmyk_color}{alternativeSpace DocRgbSpace eq{
alternativeColor aload pop create_rgb_color/convert_to_cmyk dexec}{
alternativeSpace DocGrayScaleSpace eq{alternativeColor aload pop
create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1 create_cmyk_color}ifelse
}ifelse}ifelse}bd currentdict end def/create_spot_colorspace{load
/alternativeSpace xd/alternativeColor xd/name xd[/Separation name
alternativeSpace[alternativeColor alternativeSpace/spot_tint_transform_proc cvx
]cvx]}bd/create_spot_color{SpotColorSpec 9 dict copy begin dup type/arraytype
ne{create_spot_colorspace}if/ColorSpace xd/color exch 1 array astore def
ColorSpace 1 get 1 array astore/names xd currentdict end}bd/DevicenColorSpec
SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def/set_color{Level3{
ColorSpace safe_setcolorspace color aload pop setcolor}{ColorSpace 2 get
setcolorspace color aload pop ColorSpace 3 get exec setcolor}ifelse}bd
/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup names
exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex 0 ge
{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel16Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 594 842
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
250.38850 723.88091 256.20094 731.01231 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
250.38850 723.88091 m
251.87981 731.01231 L
256.20094 731.01231 L
256.20094 730.20557 L
252.65537 730.20557 L
252.18822 727.97443 L
256.20094 727.97443 L
256.20094 727.38539 L
256.15531 727.16769 L
252.02069 727.16769 L
251.50195 724.68765 L
256.00791 724.68765 L
255.83726 723.88091 L
250.38850 723.88091 L
@c
F

@rax %Note: Object
190.20076 673.96054 246.12094 673.96167 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
246.12094 673.96110 m
190.20076 673.96110 L
S

@rax %Note: Object
409.64173 565.24110 414.12076 572.21773 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
409.64173 565.24110 m
411.10072 572.21773 L
411.95537 572.21773 L
411.04743 567.87676 L
413.57339 570.29811 L
414.12076 570.29811 L
414.12076 569.78220 L
412.55518 568.41109 L
413.85713 565.24110 L
412.91688 565.24110 L
411.90350 567.83934 L
410.84957 566.93339 L
410.49638 565.24110 L
409.64173 565.24110 L
@c
F

@rax %Note: Object
392.88076 625.36110 396.84076 635.80110 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
394.44094 625.36110 m
394.44094 631.72091 L
395.16094 631.72091 L
395.16094 625.36110 L
394.44094 625.36110 L
@c
394.80094 631.72091 m
392.88076 629.80101 L
394.80094 635.80110 L
396.84076 629.80101 L
394.80094 631.72091 L
@c
F

@rax %Note: Object
182.94548 713.56139 189.30926 720.93203 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
188.04671 716.19109 m
188.99121 716.06154 L
188.69301 715.23808 188.25846 714.61559 187.68699 714.19408 c
187.11666 713.77228 186.47717 713.56139 185.76624 713.56139 c
184.90139 713.56139 184.21342 713.82529 183.70630 714.35339 c
183.19918 714.88290 182.94548 715.63975 182.94548 716.62422 c
182.94548 717.90746 183.33184 718.96989 184.10230 719.80980 c
184.78857 720.55843 185.64180 720.93203 186.66113 720.93203 c
187.41657 720.93203 188.02828 720.72935 188.49572 720.32428 c
188.96287 719.91921 189.23499 719.37496 189.30926 718.69096 C
188.42428 718.61131 L
188.32649 719.12580 188.13090 719.50932 187.83780 719.76331 c
187.54441 720.01729 187.16655 720.14513 186.70422 720.14513 c
185.83257 720.14513 185.12646 719.75820 184.58957 718.98321 c
184.12384 718.31424 183.89027 717.52224 183.89027 716.60438 c
183.89027 715.87219 184.07112 715.31291 184.43055 714.92769 c
184.78998 714.54076 185.25912 714.34828 185.83739 714.34828 c
186.32976 714.34828 186.77707 714.50929 187.17477 714.82961 c
187.57417 715.15020 187.86444 715.60488 188.04671 716.19109 C
@c
F

@rax %Note: Object
417.27543 542.68101 423.56948 549.81241 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
418.63606 542.68101 m
417.27543 549.81241 L
418.19357 549.81241 L
419.01392 545.55959 l
419.16302 544.78743 419.26394 544.16494 419.31723 543.69354 C
419.61855 544.29959 419.86403 544.78091 420.05480 545.13780 c
422.58841 549.81241 L
423.56948 549.81241 L
419.66674 542.68101 L
418.63606 542.68101 L
@c
F

@rax %Note: Object
326.04094 635.80054 399.60085 635.80167 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
326.04094 635.80110 m
399.60085 635.80110 L
S

@rax %Note: Object
243.36085 532.00091 249.36094 736.96110 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
246.12094 532.00091 m
245.88085 733.00110 L
246.72076 733.00110 L
246.84094 532.00091 L
246.12094 532.00091 L
@c
246.36076 733.00110 m
243.36085 730.96101 L
246.36076 736.96110 L
249.36094 730.96101 L
246.36076 733.00110 L
@c
F

@rax %Note: Object
178.32076 610.60054 442.92076 610.60167 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[4.16138 2.88095 ] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
178.32076 610.60110 m
442.92076 610.60110 L
S

@rax %Note: Object
327.48094 635.80110 331.44094 655.96110 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
329.76085 651.88091 m
329.88076 639.76110 L
329.04085 639.76110 L
329.04085 651.88091 L
329.76085 651.88091 L
@c
329.40085 651.88091 m
327.48094 649.84110 L
329.40085 655.96110 L
331.44094 649.96101 L
329.40085 651.88091 L
@c
329.40085 639.76110 m
331.44094 641.80091 L
329.40085 635.80110 L
327.48094 641.80091 L
329.40085 639.76110 L
@c
F

@rax %Note: Object
354.72076 645.52054 399.60085 645.52167 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
354.72076 645.52110 m
399.60085 645.52110 L
S

@rax %Note: Object
393.00094 645.40091 396.96094 666.40110 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
395.40076 666.40110 m
395.40076 649.36091 L
394.68076 649.36091 L
394.68076 666.40110 L
395.40076 666.40110 L
@c
395.04076 649.36091 m
396.96094 651.40101 L
395.04076 645.40091 L
393.00094 651.40101 L
395.04076 649.36091 L
@c
F

@rax %Note: Object
417.96085 577.00091 422.04076 655.72101 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
420.36094 649.72091 m
420.36094 583.00101 L
419.64094 583.00101 L
419.64094 649.72091 L
420.36094 649.72091 L
@c
420.00094 649.72091 m
417.96085 645.76091 L
420.00094 655.72101 L
421.92085 645.76091 L
420.00094 649.72091 L
@c
420.00094 583.00101 m
422.04076 586.96101 L
420.00094 577.00091 L
417.96085 586.96101 L
420.00094 583.00101 L
@c
F

@rax %Note: Object
408.01408 634.00110 411.01228 637.24620 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
408.54557 634.00110 m
408.01408 637.24620 L
408.55068 637.24620 L
408.82847 635.46009 l
408.85965 635.26422 408.89735 634.94532 408.94214 634.50340 C
409.04816 634.73357 409.18337 634.99720 409.34750 635.29427 c
410.42976 637.24620 L
411.01228 637.24620 L
409.15928 634.00110 L
408.54557 634.00110 L
@c
F

@rax %Note: Object
306.48076 655.84035 420.00094 655.84148 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
306.48076 655.84091 m
420.00094 655.84091 L
S

@rax %Note: Object
436.81833 597.16743 441.48076 606.25134 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
441.48076 605.54438 m
440.95720 605.54438 l
440.43959 605.54438 440.03820 605.46841 439.75616 605.31676 c
439.47241 605.16482 439.28249 604.94882 439.18611 604.66620 c
439.00243 604.12876 439.38085 603.85918 440.32365 603.85918 c
441.01814 603.85918 L
440.77663 603.15222 L
440.36249 603.15222 439.98066 603.09099 439.63115 602.96825 c
439.28306 602.84551 438.93043 602.62441 438.57581 602.30806 c
438.22091 601.99002 437.97487 601.62860 437.83767 601.22665 c
437.73477 600.92476 437.73137 600.65518 437.82803 600.41962 c
437.92469 600.18378 438.25493 600.03241 438.81704 599.96608 c
439.17931 599.92271 439.43074 599.85156 439.57474 599.75461 c
439.71732 599.65795 439.81427 599.51254 439.86331 599.31553 c
439.91263 599.12022 439.89817 598.90876 439.81994 598.67972 c
439.67764 598.26331 439.38425 597.90813 438.94120 597.61587 c
438.49814 597.32362 437.98479 597.17367 437.39915 597.16743 C
437.88784 597.96142 L
438.21298 597.98381 438.46583 598.06460 438.64498 598.20208 c
438.82611 598.34069 438.94091 598.48299 438.99024 598.62813 c
439.10050 598.95071 438.89471 599.14120 438.37370 599.20101 c
437.02724 599.35294 436.55499 600.01795 436.95723 601.19603 c
437.12192 601.67877 437.41304 602.11106 437.83087 602.49515 c
438.24954 602.88094 438.71499 603.16838 439.22693 603.36028 C
438.79975 603.41698 438.53216 603.58649 438.42501 603.86740 c
438.31843 604.14973 438.31446 604.43546 438.41480 604.72942 c
438.55427 605.13761 438.85587 605.49279 439.32047 605.79609 c
439.78507 606.09940 440.36220 606.25134 441.05187 606.25134 c
441.48076 606.25134 L
441.48076 605.54438 L
@c
F

@rax %Note: Object
215.64085 648.52101 219.60085 655.96110 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
218.04094 655.96110 m
217.92076 652.60091 L
217.20076 652.60091 L
217.20076 655.96110 L
218.04094 655.96110 L
@c
217.56076 652.60091 m
219.60085 654.52110 L
217.56076 648.52101 L
215.64085 654.52110 L
217.56076 652.60091 L
@c
F

@rax %Note: Object
215.64085 666.40110 219.60085 673.96110 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
217.20076 666.40110 m
217.20076 670.00110 L
218.04094 670.00110 L
218.04094 666.40110 L
217.20076 666.40110 L
@c
217.56076 670.00110 m
215.64085 667.96101 L
217.56076 673.96110 L
219.60085 667.96101 L
217.56076 670.00110 L
@c
F

@rax %Note: Object
273.48094 528.28101 442.80085 635.68120 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
273.48094 528.76091 m
301.92094 582.28101 330.36094 635.80110 358.56085 635.68091 C
386.76076 635.68091 414.72085 582.04091 442.80085 528.28101 C
S

@rax %Note: Object
270.12076 530.44101 447.60076 645.40120 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[4.16138 2.88095 ] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
270.12076 530.92091 m
299.88085 588.28110 329.76085 645.52110 359.28085 645.40091 C
388.80085 645.28101 418.20094 587.92110 447.60076 530.44101 C
S

@rax %Note: Object
264.48094 528.76091 451.68094 656.32139 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
264.48094 529.36101 m
295.92085 592.84091 327.36076 656.44101 358.56085 656.32110 C
389.76094 656.20091 420.72094 592.48091 451.68094 528.76091 C
S

@rax %Note: Object
358.20028 524.44091 358.20142 682.72101 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
358.20085 682.72101 m
358.20085 524.44091 L
S

@rax %Note: Object
264.48094 538.84091 451.68094 666.40110 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[4.16138 2.88095 ] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
264.48094 539.32110 m
295.92085 602.92091 327.36076 666.40110 358.56085 666.40110 C
389.76094 666.28091 420.72094 602.56091 451.68094 538.84091 C
S

@rax %Note: Object
208.32094 648.52101 286.44094 732.52091 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[4.16138 2.88095 ] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
286.44094 732.52091 m
282.12094 715.48101 277.80094 698.32091 273.48094 685.84110 C
269.04076 673.48091 264.72076 664.12091 260.40076 657.88101 C
256.08076 651.64110 251.76076 648.52101 247.44076 648.52101 C
243.00085 648.52101 238.68085 651.64110 234.36085 657.88101 C
230.04085 664.12091 225.72085 673.48091 221.40085 685.84110 C
217.08085 698.32091 210.48094 727.48091 208.32094 732.52091 C
S

@rax %Note: Object
214.80094 648.52044 246.24085 648.52157 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
246.24085 648.52101 m
214.80094 648.52101 L
S

@rax %Note: Object
214.80094 673.96110 279.96094 733.96091 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
279.96094 733.96091 m
278.88094 730.12110 276.72094 719.80101 273.48094 711.28091 C
270.24094 702.88101 264.72076 689.44110 260.40076 683.32110 C
256.08076 676.96101 251.76076 673.96110 247.44076 673.96110 C
243.00085 673.96110 238.80076 676.96101 234.36085 683.32110 C
230.04085 689.44110 224.64085 702.88101 221.40085 711.28091 C
218.16085 719.80101 216.12076 729.28091 214.80094 733.96091 C
S

@rax %Note: Object
190.92076 578.08091 194.88076 673.96110 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
193.32085 667.96101 m
193.32085 584.08101 L
192.48094 584.08101 L
192.48094 667.96101 L
193.32085 667.96101 L
@c
192.96085 667.96101 m
190.92076 664.00101 L
192.96085 673.96110 L
194.88076 664.00101 L
192.96085 667.96101 L
@c
192.96085 584.08101 m
194.88076 588.16091 L
192.96085 578.08091 L
190.92076 588.16091 L
192.96085 584.08101 L
@c
F

@rax %Note: Object
188.28340 627.56957 191.22973 631.07887 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
190.45247 628.86699 m
191.02904 628.80860 L
190.88561 628.38907 190.68151 628.07783 190.41619 627.87458 c
190.15143 627.67134 189.85039 627.56957 189.51250 627.56957 c
189.14683 627.56957 188.85118 627.68750 188.62356 627.92419 c
188.39679 628.16003 188.28340 628.48970 188.28340 628.91348 c
188.28340 629.28000 188.35569 629.64000 188.50139 629.99461 c
188.64737 630.34809 188.85543 630.61824 189.12643 630.80220 c
189.39827 630.98702 189.70809 631.07887 190.05562 631.07887 c
190.41619 631.07887 190.70192 630.97710 190.91367 630.77301 c
191.12372 630.56863 191.22973 630.29934 191.22973 629.96315 C
190.66620 629.92431 L
190.66422 630.13720 190.60271 630.30472 190.48054 630.42491 c
190.35978 630.54482 190.19906 630.60548 190.00035 630.60548 c
189.77074 630.60548 189.57090 630.53291 189.40167 630.38693 c
189.23329 630.24208 189.10063 630.02154 189.00425 629.72532 c
188.90844 629.42910 188.85969 629.14365 188.85969 628.87011 c
188.85969 628.58381 188.92346 628.36866 189.04961 628.22580 c
189.17575 628.08208 189.33222 628.01065 189.51789 628.01065 c
189.70469 628.01065 189.88186 628.08094 190.05222 628.22268 c
190.22173 628.36328 190.35553 628.57843 190.45247 628.86699 C
@c
F

@rax %Note: Object
180.78576 630.27865 187.56085 636.17216 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
182.94321 636.17216 m
183.88687 636.17216 L
182.94038 634.98246 182.32753 633.97786 182.04718 633.15694 c
181.83090 632.52283 181.77335 632.01317 181.87228 631.62624 c
181.97121 631.23874 182.19940 631.04598 182.55855 631.04598 c
182.78986 631.04598 183.03732 631.13698 183.30038 631.31669 c
183.56570 631.49811 183.77518 631.71496 183.92769 631.96724 c
184.08076 632.22094 184.23496 632.57499 184.39002 633.02882 c
184.96573 634.71543 L
185.93178 634.71543 L
185.35606 633.02882 l
185.20469 632.58605 185.11767 632.23398 185.09528 631.97235 c
185.07288 631.71298 185.13496 631.49244 185.27754 631.31471 c
185.42183 631.13499 185.60778 631.04598 185.83880 631.04598 c
186.19427 631.04598 186.55228 631.23874 186.91512 631.62425 c
187.16457 631.88929 187.37972 632.21301 187.56085 632.59654 C
187.56085 631.11572 L
187.52910 631.08539 187.49707 631.05591 187.46447 631.02728 c
186.89641 630.52894 186.30595 630.27865 185.68998 630.27865 c
184.87191 630.27865 184.43537 630.71235 184.38123 631.57776 C
183.73068 630.71235 182.99594 630.27865 182.17814 630.27865 c
181.52901 630.27865 181.10608 630.54170 180.90425 631.06639 c
180.70413 631.59080 180.75770 632.30627 181.06753 633.21420 c
181.39408 634.17061 182.01883 635.15452 182.94321 636.17216 C
@c
F

@rax %Note: Object
175.50850 630.40110 179.64085 637.35109 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
175.50850 630.40110 m
175.50850 637.35109 L
179.64085 637.35109 L
179.64085 637.17307 L
175.68595 637.17307 L
175.68595 630.57912 L
179.64085 630.57912 L
179.64085 630.40110 L
175.50850 630.40110 L
@c
F

@rax %Note: Object
190.20076 574.36101 426.48094 580.36110 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
190.20076 577.72091 m
422.40076 577.72091 L
422.40076 577.00091 L
190.20076 577.00091 L
190.20076 577.72091 L
@c
422.40076 577.36091 m
420.48085 580.36110 L
426.48094 577.36091 L
420.48085 574.36101 L
422.40076 577.36091 L
@c
F

@rax %Note: Object
225.96973 654.92844 228.96765 658.49896 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
228.17707 656.24825 m
228.76356 656.18901 L
228.61729 655.76211 228.40980 655.44548 228.13965 655.23855 c
227.87065 655.03191 227.56422 654.92844 227.22066 654.92844 c
226.84819 654.92844 226.54743 655.04835 226.31556 655.28929 c
226.08510 655.52910 225.96973 655.86444 225.96973 656.29559 c
225.96973 656.66863 226.04343 657.03487 226.19169 657.39572 c
226.33994 657.75543 226.55197 658.03039 226.82750 658.21748 c
227.10416 658.40542 227.41937 658.49896 227.77313 658.49896 c
228.13965 658.49896 228.43077 658.39550 228.64592 658.18772 c
228.85994 657.97965 228.96765 657.70583 228.96765 657.36369 C
228.39449 657.32428 L
228.39222 657.54085 228.32957 657.71150 228.20570 657.83339 c
228.08268 657.95556 227.91912 658.01707 227.71701 658.01707 c
227.48287 658.01707 227.27991 657.94337 227.10756 657.79483 c
226.93635 657.64743 226.80085 657.42321 226.70334 657.12189 c
226.60583 656.82028 226.55622 656.53002 226.55622 656.25165 c
226.55622 655.96025 226.62113 655.74142 226.74954 655.59600 c
226.87795 655.44973 227.03726 655.37717 227.22605 655.37717 c
227.41597 655.37717 227.59625 655.44860 227.76973 655.59288 c
227.94208 655.73575 228.07814 655.95458 228.17707 656.24825 C
@c
F

@rax %Note: Object
192.96085 577.84110 300.00076 732.52091 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
300.00076 732.52091 m
294.00094 701.08101 288.12076 669.52091 282.12094 646.60110 C
276.12085 623.68101 270.24094 606.40101 264.24085 595.00091 C
258.36094 583.60110 252.36085 577.84110 246.48094 577.84110 C
240.48085 577.84110 234.60094 583.60110 228.60085 595.00091 C
222.60076 606.40101 216.72085 623.68101 210.72076 646.60110 C
204.84085 669.52091 195.84085 723.28110 192.96085 732.52091 C
S

@rax %Note: Object
192.48094 549.76110 299.52085 704.56110 @E
/$fm 1 def
0 J 1 j 10.000000828812519 setmiterlimit
[4.16138 2.88095 ] 0 d 0 R 0 @G
0.0000 0.0000 0.0000  create_rgb_color set_outline
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.75005 0.75005 0.00000 @w
299.52085 704.56110 m
293.52076 673.00101 287.64085 641.56110 281.64076 618.64101 C
275.76085 595.60101 269.76076 578.44091 263.88085 567.04110 C
257.88076 555.52110 252.00085 549.76110 246.00076 549.76110 C
240.00094 549.76110 234.12076 555.52110 228.12094 567.04110 C
222.12085 578.44091 216.24094 595.60101 210.24085 618.64101 C
204.36094 641.56110 195.36094 695.20110 192.48094 704.56110 C
S

@rax %Note: Object
321.10101 639.28091 324.27524 643.92520 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
321.10101 639.28091 m
322.07216 643.92520 L
322.64107 643.92520 L
322.26775 642.14050 L
322.47723 642.34687 322.67225 642.49512 322.85254 642.58469 c
323.03395 642.67455 323.21962 642.71877 323.40954 642.71877 c
323.68365 642.71877 323.89625 642.64535 324.04847 642.49824 c
324.19956 642.35225 324.27524 642.15865 324.27524 641.91770 c
324.27524 641.79978 324.23953 641.58265 324.16809 641.26573 c
323.72901 639.28091 L
323.16009 639.28091 L
323.60825 641.31562 l
323.67175 641.61071 323.70406 641.79553 323.70406 641.87235 c
323.70406 641.98148 323.66721 642.07134 323.59294 642.14050 c
323.51839 642.21052 323.41068 642.24539 323.27036 642.24539 c
323.06740 642.24539 322.87408 642.19124 322.69068 642.08211 c
322.50699 641.97383 322.36243 641.82586 322.25783 641.63650 c
322.15436 641.44857 322.05827 641.14356 321.97209 640.72403 c
321.66992 639.28091 L
321.10101 639.28091 L
@c
F

@rax %Note: Object
313.98576 641.91855 320.76085 647.81206 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
316.14321 647.81206 m
317.08687 647.81206 L
316.14038 646.62236 315.52753 645.61776 315.24718 644.79685 c
315.03090 644.16302 314.97335 643.65335 315.07228 643.26614 c
315.17121 642.87865 315.39940 642.68589 315.75855 642.68589 c
315.98986 642.68589 316.23732 642.77688 316.50038 642.95660 c
316.76570 643.13830 316.97518 643.35487 317.12769 643.60715 c
317.28076 643.86085 317.43496 644.21490 317.59002 644.66901 c
318.16573 646.35534 L
319.13178 646.35534 L
318.55606 644.66901 l
318.40469 644.22595 318.31767 643.87389 318.29528 643.61254 c
318.27288 643.35317 318.33496 643.13263 318.47754 642.95461 c
318.62183 642.77490 318.80778 642.68589 319.03880 642.68589 c
319.39427 642.68589 319.75228 642.87865 320.11512 643.26416 c
320.36457 643.52920 320.57972 643.85291 320.76085 644.23644 C
320.76085 642.75591 L
320.72910 642.72557 320.69707 642.69609 320.66447 642.66746 c
320.09641 642.16885 319.50595 641.91855 318.88998 641.91855 c
318.07191 641.91855 317.63537 642.35254 317.58123 643.21795 C
316.93068 642.35254 316.19594 641.91855 315.37814 641.91855 c
314.72901 641.91855 314.30608 642.18189 314.10425 642.70630 c
313.90413 643.23071 313.95770 643.94617 314.26753 644.85411 c
314.59408 645.81052 315.21883 646.79471 316.14321 647.81206 C
@c
F

@rax %Note: Object
308.70850 642.04101 312.84085 648.99099 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
308.70850 642.04101 m
308.70850 648.99099 L
312.84085 648.99099 L
312.84085 648.81298 L
308.88595 648.81298 L
308.88595 642.21902 L
312.84085 642.21902 L
312.84085 642.04101 L
308.70850 642.04101 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel16Dict 16.0 0
%%EOF
